<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>spatial_database</title>
    <link href="/db/spatial-database/"/>
    <url>/db/spatial-database/</url>
    
    <content type="html"><![CDATA[<h1 id="空间数据库"><a href="#空间数据库" class="headerlink" title="空间数据库"></a>空间数据库</h1><p>空间数据库是一种通用数据库（通常是关系数据库），它已得到增强，包括表示几何空间中定义的对象的空间数据，以及用于查询和分析此类数据的工具。大多数空间数据库允许表示简单的几何对象，例如点、线和多边形。某些空间数据库可处理更复杂的结构，例如 3D 对象、拓扑覆盖、线性网络和不规则三角网 （TIN）。虽然典型的数据库已经开发用于管理各种数字和字符类型的数据，但此类数据库需要额外的功能来有效地处理空间数据类型，并且开发人员经常添加几何或要素数据类型。开放地理空间联盟（OGC）开发了简单功能规范（首次发布于1997年），并为向数据库系统添加空间功能设定了标准。SQL/MM 空间 ISO/IEC 标准是 SQL/MM 多媒体标准的一部分，它使用支持循环插值的数据类型扩展了简单特征标准。</p><p>除了典型的 SQL 查询（如 SELECT 语句）之外，空间数据库还可以执行各种空间操作。以下操作以及更多操作由开放地理空间联盟标准指定：</p><p>空间测量：计算线长度、多边形面积、几何之间的距离等。<br>空间函数：修改现有要素以创建新要素，例如，在现有要素周围提供缓冲区、相交要素等。<br>空间谓词：允许对几何之间的空间关系进行真/假查询。示例包括“两个多边形是否重叠”或“在我们计划建造垃圾填埋场的区域一英里范围内是否有住宅？（见DE-9IM)<br>几何构造函数：创建新几何图形，通常通过指定定义形状的顶点（点或节点）。<br>观察者函数：返回有关要素的特定信息的查询，例如圆心的位置。</p><h2 id="空间索引"><a href="#空间索引" class="headerlink" title="空间索引"></a>空间索引</h2><p>常见的空间索引方法包括：</p><ul><li><p>Binary space partitioning (BSP-Tree): Subdividing space by hyperplanes.</p></li><li><p>Bounding volume hierarchy (BVH)</p></li><li><p>Geohash</p></li><li><p>Grid (spatial index)</p></li><li><p>HHCode</p></li><li><p>Hilbert R-tree</p></li><li><p>kd-tree</p></li><li><p>m-tree – an m-tree index can be used for the efficient resolution of similarity queries on complex objects as compared using an arbitrary metric.</p></li><li><p>Octree</p></li><li><p>PH-tree</p></li><li><p>Quadtree</p></li><li><p>R-tree: Typically the preferred method for indexing spatial data.[4] Objects (shapes, lines and points) are grouped using the minimum bounding rectangle (MBR). Objects are added to an MBR within the index that will lead to the smallest increase in its size.</p></li><li><p>R+ tree</p></li><li><p>R* tree</p></li><li><p>UB-tree</p></li><li><p>X-tree</p></li><li><p>Z-order (curve)</p><h2 id="空间查询"><a href="#空间查询" class="headerlink" title="空间查询"></a>空间查询</h2><p>pg为例</p></li><li><p>Distance(geometry, geometry) : number</p></li><li><p>Equals(geometry, geometry) : boolean</p></li><li><p>Disjoint(geometry, geometry) : boolean</p></li><li><p>Intersects(geometry, geometry) : boolean</p></li><li><p>Touches(geometry, geometry) : boolean</p></li><li><p>Crosses(geometry, geometry) : boolean</p></li><li><p>Overlaps(geometry, geometry) : boolean</p></li><li><p>Contains(geometry, geometry) : boolean</p></li><li><p>Length(geometry) : number</p></li><li><p>Area(geometry) : number</p></li><li><p>Centroid(geometry) : geometry<br><a href="https://en.wikipedia.org/wiki/Spatial_database">wiki</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>db</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>jts</title>
    <link href="/jts/jts/"/>
    <url>/jts/jts/</url>
    
    <content type="html"><![CDATA[<p>jts 源码学习。学习源码，才能更深入的了解原理</p><h1 id="index"><a href="#index" class="headerlink" title="index"></a>index</h1><p>从index的package-info里面可以看到，这个包提供各种空间索引，SpatialIndex接口里面定义了索引的4个操作，增删查，实现这个接口的有3个类：HPRtree，Quadtree和STRtree。下面简要介绍下包内的内容。</p><table><thead><tr><th align="center">名称</th><th align="center">空间索引</th><th align="center">使用场景</th><th align="center">help</th></tr></thead><tbody><tr><td align="center">Binary Interval Tree</td><td align="center">否</td><td align="center">四叉树的一维版本。给定一个包含 n 个区间的集合 S 和一个查询点 q，报告所有包含 q 的区间；和重叠区间搜索问题：给定一个包含 n 个区间的集合 S 和一个查询区间 Q，报告 S 中与 Q 重叠的所有这些区间。</td><td align="center"><a href="https://iq.opengenus.org/interval-tree/">https://iq.opengenus.org/interval-tree/</a></td></tr><tr><td align="center">Monotone Chains</td><td align="center">否</td><td align="center">凸包</td><td align="center"><a href="https://zhuanlan.zhihu.com/p/158043191">https://zhuanlan.zhihu.com/p/158043191</a></td></tr><tr><td align="center">Hilbert-Packed R-tree</td><td align="center">是</td><td align="center">是R-tree的一种变体，是多维对象的索引，基于分形曲线构建静态 R 树的压缩算法</td><td align="center">dim(E(a)∩E(b))</td></tr><tr><td align="center">intervalrtree</td><td align="center">否</td><td align="center">一维间隔实现R树索引</td><td align="center"></td></tr><tr><td align="center">KD-Tree</td><td align="center">否</td><td align="center">分割k维数据。主要应用于多维空间关键数据的搜索（如：范围搜索和最近邻搜索）。</td><td align="center"><a href="https://en.wikipedia.org/wiki/K-d_tree">https://en.wikipedia.org/wiki/K-d_tree</a></td></tr><tr><td align="center">Quadtree</td><td align="center">是</td><td align="center">将已知范围的空间等分成四个相等的子空间</td><td align="center"></td></tr><tr><td align="center">R-tree</td><td align="center">是</td><td align="center">MBR最小边界矩形的方法，从叶子节点开始用矩形将空间框起来</td><td align="center"></td></tr><tr><td align="center">sweepline</td><td align="center">否</td><td align="center">它用于计算索引中间隔之间的所有重叠</td><td align="center"></td></tr></tbody></table><p>可以参考<a href="https://blog.csdn.net/weixin_40294332/article/details/124145741">JTS-SpatialIndex空间索引使用说明（十五）</a></p><h1 id="srtree"><a href="#srtree" class="headerlink" title="srtree"></a>srtree</h1><p><a href="https://developer.aliyun.com/article/750351">https://developer.aliyun.com/article/750351</a><br><a href="https://www.cnblogs.com/fly2wind/p/14525405.html">https://www.cnblogs.com/fly2wind/p/14525405.html</a><br><a href="https://www.jianshu.com/p/06ba03e1692f">https://www.jianshu.com/p/06ba03e1692f</a><br><a href="https://www.bbsmax.com/A/Vx5MXQG9JN/">https://www.bbsmax.com/A/Vx5MXQG9JN/</a><br><a href="http://t.zoukankan.com/naaoveGIS-p-6774549.html">http://t.zoukankan.com/naaoveGIS-p-6774549.html</a></p><p><a href="https://blog.csdn.net/wk1134314305/article/details/76408181">https://blog.csdn.net/wk1134314305/article/details/76408181</a><br>继续<br><a href="https://gitee.com/shengshifeiyang/jts-learning/blob/master/docs/jts-core/demo/foot-point.md">https://gitee.com/shengshifeiyang/jts-learning/blob/master/docs/jts-core/demo/foot-point.md</a><br><a href="https://www.zhihu.com/question/268006579">https://www.zhihu.com/question/268006579</a></p><h1 id="algorithm"><a href="#algorithm" class="headerlink" title="algorithm"></a>algorithm</h1><h1 id="geom"><a href="#geom" class="headerlink" title="geom"></a>geom</h1><p>从<a href="https://github.com/locationtech/jts/blob/master/modules/core/src/main/java/org/locationtech/jts/geom/IntersectionMatrix.java">官网地址</a>中可以看到，DE-9IM矩阵值，指两个几何之间的拓扑关系，这种拓扑关系可以用于描述两个几何图形空间关系的一种标准。<br>更多详情可以参考<a href="https://portal.ogc.org/files/?artifact_id=25355">ogc官网</a>或者<a href="https://en.wikipedia.org/wiki/DE-9IM">wikipedia</a>。</p><p>DE-9IM矩阵是带有整数项的3x3矩阵，矩阵条目表示每个交点的可能维度<br>。通常将每个几何图形分为三部分：外部（exterior),边界（boundary)和内部(interior)，如下表格。</p><table><thead><tr><th align="center"></th><th align="center">Interior</th><th align="center">Boundary</th><th align="center">Exterior</th></tr></thead><tbody><tr><td align="center">Interior</td><td align="center">dim(I(a)∩I(b))</td><td align="center">dim(I(a)∩B(b))</td><td align="center">dim(I(a)∩E(b))</td></tr><tr><td align="center">Boundary</td><td align="center">dim(B(a)∩I(b))</td><td align="center">dim(B(a)∩B(b))</td><td align="center">dim(B(a)∩E(b))</td></tr><tr><td align="center">Exterior</td><td align="center">dim(E(a)∩I(b))</td><td align="center">dim(E(a)∩B(b))</td><td align="center">dim(E(a)∩E(b))</td></tr></tbody></table><h2 id="布尔形式"><a href="#布尔形式" class="headerlink" title="布尔形式"></a>布尔形式</h2><p>矩阵的定义域为{-1,0,1,2}，常见的拓扑关系描述符大概10种左右</p><ul><li>0,1,2表示非空，用T进行表示</li><li>空集-1用F表示</li><li>*表示是什么都可以(所以不需要计算)</li></ul><p>可以参考<a href="https://en.wikipedia.org/wiki/DE-9IM">wikipedia</a>,<a href="https://github.com/locationtech/jts/blob/master/modules/core/src/main/java/org/locationtech/jts/geom/IntersectionMatrix.java">jts</a>或者<a href="http://libgeos.org/doxygen/classgeos_1_1geom_1_1IntersectionMatrix.html">GEOS</a>找到相关的返回值，部分如下</p><table><thead><tr><th align="center">谓词</th><th align="center">返回值</th></tr></thead><tbody><tr><td align="center">相等（Equals)</td><td align="center"><code>T*F**FFF* </code></td></tr><tr><td align="center">相离（Disjoint)</td><td align="center"><code>FF*FF****</code></td></tr><tr><td align="center">相接（Touches)</td><td align="center"><code>FT*******\F**T*****\F***T****</code></td></tr><tr><td align="center">覆盖（Covers)</td><td align="center"><code>T*****FF*\*T****FF*\***T**FF*\****T*FF*</code></td></tr><tr><td align="center">叠置（Overlaps)</td><td align="center"><code>T*T***T**\1*T***T**</code></td></tr></tbody></table><p>参考 </p><ul><li><a href="https://www.giserdqy.com/gis/gisknowledge/35267/?amp=1">空间拓扑关系详解</a></li><li><a href="https://www.cnblogs.com/zhongHW/p/11047022.html">GIS算法基础（一）</a></li></ul><h1 id="MBR"><a href="#MBR" class="headerlink" title="MBR"></a>MBR</h1><p>在JTS或shapely程序中，为了提升计算性能，一般还会先进行MBR判断，再进行DE-9IM判断</p><h1 id="Area"><a href="#Area" class="headerlink" title="Area"></a>Area</h1><p>jts使用<a href="https://en.wikipedia.org/wiki/Shoelace_formula">鞋带定理</a>计算面积</p><h2 id="空间关系"><a href="#空间关系" class="headerlink" title="空间关系"></a>空间关系</h2><ul><li>线段的拐向判断<br>可以利用矢量的叉积判断：<br>p=（x1,y1）,q=(x2,y2)<br>p×q=x1<em>y2-x2</em>y1; </li></ul><p>若PxQ&gt;0，则说明P在Q的顺时针方向</p><p>若PxQ&lt;0，则说明P在Q的逆时针方向</p><p>若PxQ=0，则说明PQ共线(共线有可能反向也可能正向)</p><ul><li>判断点是否在线段上<br>设点为Q，线段为P1P2，判断点Q在该线段上的依据是（Q-P1）X(P2-P1) = 0，这样就保证Q在P1P2这条直线上，但是还是不能保证在P1P2的线段上，所以我们得多加个条件：且Q在P1,P2为对角顶点的矩形内</li><li>判断两线段是否相交<br>分为两步确定两天线段是否相交：<br>①快速排斥试验:mbr<br>②跨立试验:如果ab,cd相交，那么ab必跨过cd，那么（ac x ab ）x（bd xab）&lt;=0</li><li>判断点是否在多边形内<br>一种是射线法，另一种是转角法。</li></ul><p><a href="https://www.cnblogs.com/zhongHW/p/11047020.html">https://www.cnblogs.com/zhongHW/p/11047020.html</a></p><h1 id="geomgraph"><a href="#geomgraph" class="headerlink" title="geomgraph"></a>geomgraph</h1><h1 id="io"><a href="#io" class="headerlink" title="io"></a>io</h1><h1 id="operation"><a href="#operation" class="headerlink" title="operation"></a>operation</h1><h1 id="simplify"><a href="#simplify" class="headerlink" title="simplify"></a>simplify</h1><h1 id="IntersectionMatrix"><a href="#IntersectionMatrix" class="headerlink" title="IntersectionMatrix"></a>IntersectionMatrix</h1><p><a href="https://www.cnblogs.com/zhongHW/p/11047020.html">https://www.cnblogs.com/zhongHW/p/11047020.html</a><br>几何结构<br>DelaunayTriangulationBuilder<br>MinimumBoundingCircle<br>newVoronoiDiagramBuilder<br>度量函数<br>DistanceOp<br>DiscreteHausdorffDistance<br>AreaSimilarityMeasure<br>HausdorffSimilarityMeasure<br>空间算法<br>线段相交算法 RobustLineIntersector<br>数学函数<br>角度分析 Angle<br><a href="https://blog.csdn.net/qq_43842093/article/details/124853985">JTS学习笔记</a><br><a href="https://blog.csdn.net/weixin_40294332/article/details/124124042">JTS简介</a></p>]]></content>
    
    
    <categories>
      
      <category>jts</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/uncategorized/hello-world/"/>
    <url>/uncategorized/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
